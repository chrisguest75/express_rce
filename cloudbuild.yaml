substitutions:
  _IMAGE_NAME: "express_rce" 

timeout: "1200.0s"
# Build the dockerfile.
#_IMAGE_NAME: "express_rce_$BRANCH_NAME" 
# TODO: Check if master and tag without branch name as well
steps:
- name: 'gcr.io/cloud-builders/git'
  entrypoint: /bin/bash
  args:
    - '-c'
    - |
      git --no-pager log -n 2
      export build_previous_commit=$(git rev-parse HEAD^)
      export build_base_commit=$(git merge-base HEAD origin/master)
      echo "BUILD_PREVIOUS_COMMIT=$build_previous_commit"
      echo "BUILD_BASE_COMMIT=$build_base_commit"
      echo "COMMIT_SHA=$COMMIT_SHA"       
      env | grep "^build_" > /workspace/build_vars

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: /bin/bash
  args:
    - '-c'
    - |
      pwd
      ls -la  
      source /workspace/build_vars     
      echo "BUILD_PREVIOUS_COMMIT=$build_previous_commit"
      echo "BUILD_BASE_COMMIT=$build_base_commit"            
      # Cache from previous commit
      docker pull gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}:latest
      docker pull gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}:$build_previous_commit
      docker build --cache-from=gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}:latest --cache-from=gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}:$build_previous_commit -t gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}:${COMMIT_SHA} .
      docker tag gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}:${COMMIT_SHA} gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}:latest
      docker push gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}:${COMMIT_SHA}
      docker push gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}:latest

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: /bin/bash
  args:
    - '-c'
    - |
      pwd
      ls -la  
      source /workspace/build_vars     
      echo "BUILD_PREVIOUS_COMMIT=$build_previous_commit"
      echo "BUILD_BASE_COMMIT=$build_base_commit"            
      # Cache from previous commit
      docker pull gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}_root:latest
      docker pull gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}_root:$build_previous_commit
      docker build -f root.Dockerfile --cache-from=gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}_root:latest --cache-from=gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}_root:$build_previous_commit -t gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}_root:${COMMIT_SHA} .
      docker tag gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}_root:${COMMIT_SHA} gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}_root:latest
      docker push gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}_root:${COMMIT_SHA}
      docker push gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}_root:latest

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: /bin/bash
  args:
    - '-c'
    - |
      pwd
      ls -la  
      source /workspace/build_vars     
      echo "BUILD_PREVIOUS_COMMIT=$build_previous_commit"
      echo "BUILD_BASE_COMMIT=$build_base_commit"            
      # Cache from previous commit
      docker pull gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}_distroless:latest
      docker pull gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}_distroless:$build_previous_commit
      docker build -f distroless.Dockerfile --cache-from=gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}_distroless:latest --cache-from=gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}_distroless:$build_previous_commit -t gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}_distroless:${COMMIT_SHA} .
      docker tag gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}_distroless:${COMMIT_SHA} gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}_distroless:latest
      docker push gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}_distroless:${COMMIT_SHA}
      docker push gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}_distroless:latest
    
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: /bin/bash
  args:  
    - '-c'
    - | 
      gcloud beta run deploy expressrce --image gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}:${COMMIT_SHA} --set-env-vars=COMMIT_SHA=${COMMIT_SHA},PROJECT_ID=$PROJECT_ID,IMAGE_NAME=${_IMAGE_NAME}_${BRANCH_NAME} --region europe-west1 --platform managed --quiet --allow-unauthenticated 
      gcloud beta run deploy expressrceroot --image gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}_root:${COMMIT_SHA} --set-env-vars=COMMIT_SHA=${COMMIT_SHA},PROJECT_ID=$PROJECT_ID,IMAGE_NAME=${_IMAGE_NAME}_${BRANCH_NAME}_root --region europe-west1 --platform managed --quiet --allow-unauthenticated 

# - name: 'gcr.io/cloud-builders/gcloud'
#   entrypoint: /bin/bash
#   args:  
#     - '-c'
#     - |     
#       gcloud beta run domain-mappings --region europe-west1 --platform managed create --service expressrce --domain expressrce.guestcode.uk
#       gcloud beta run domain-mappings --region europe-west1 --platform managed create --service expressrceroot --domain expressrcert.guestcode.uk

# These are images that pushed as well
images: ['gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}:${COMMIT_SHA}',
        'gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}_root:${COMMIT_SHA}',
        'gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}_distroless:${COMMIT_SHA}',        
        'gcr.io/$PROJECT_ID/$REPO_NAME/${_IMAGE_NAME}_${BRANCH_NAME}:latest']
